"use strict";
//import
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Main = void 0;
//service
class Main {
    constructor(data) {
        this.AxiosClient = data;
    }
    //functions
    CHATFRIENDS_RNet_GET_ALL() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/chat/v4/friends');
        });
    }
    FRIENDS_RNet_FetchFriendRequests() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/chat/v4/friendrequests');
        });
    }
    Local_Help() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/help');
        });
    }
    PRESENCE_RNet_GET_ALL() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/chat/v4/presences');
        });
    }
    PlayerAlias_RNet_GetActiveAlias() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/player-account/aliases/v1/active');
        });
    }
    RSO_Auth_User_Info() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/rso-auth/v1/authorization/userinfo');
        });
    }
    RSO_RNet_GetEntitlementsToken() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/entitlements/v1/token');
        });
    }
    Riot_Client_Region() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/riotclient/region-locale');
        });
    }
    RiotClientSession_FetchSessions() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/product-session/v1/external-sessions');
        });
    }
    Riot_KVR_NetGetSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/player-preferences/v1/data-json/Ares.PlayerSettings');
        });
    }
    Riot_KVR_NetGetSettingsTEXT_CHAT_RNet_FetchSession() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.AxiosClient.get('/chat/v1/session');
        });
    }
}
exports.Main = Main;
//# sourceMappingURL=Main.js.map